name: Compile pgvector

on:
  schedule:
    - cron: "0 0 * * *" # Run daily at midnight UTC
  push:
    paths:
      - ".github/workflows/compile.yml"
  pull_request:
    paths:
      - ".github/workflows/compile.yml"
  workflow_dispatch:

env:
  PGVECTOR_REPO: "pgvector/pgvector"

jobs:
  check_version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.check_release.outputs.new_version }}
      version: ${{ steps.check_release.outputs.version }}
    steps:
      - name: Check for new release
        id: check_release
        run: |
          latest_tag=$(curl -s "https://api.github.com/repos/${{ env.PGVECTOR_REPO }}/tags" | jq -r '.[0].name')
          echo "Latest tag: ${latest_tag#v}"
          latest_version=${latest_tag#v}
          echo "version=$latest_version" >> $GITHUB_OUTPUT

          # Get the current version from the latest release of this repo
          current_version=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r '.body' | grep -oP 'pgvector v\K[0-9.]+')
          echo "Current version: $current_version"

          if [[ "$latest_version" != "$current_version" ]]; then
            echo "new_version=true" >> $GITHUB_OUTPUT
          else
            echo "new_version=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check_version
    if: needs.check_version.outputs.new_version == 'true' || github.event_name != 'schedule'
    runs-on: windows-latest
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            triple: x86_64-pc-windows-msvc

    steps:
      - name: Set up PostgreSQL (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          choco install postgresql17 --version=17.4 --params '/Password:postgres'
          echo "C:\Program Files\PostgreSQL\17\bin" >> %GITHUB_PATH%
          echo "C:\Program Files\PostgreSQL\17" >> %GITHUB_PATH%

      - name: Clone pgvector (Windows)
        if: runner.os == 'Windows'
        uses: actions/checkout@v3
        with:
          repository: ${{ env.PGVECTOR_REPO }}
          ref: v${{ needs.check_version.outputs.version }}

      - name: Set up Visual Studio and compile pgvector (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          set "PGROOT=C:\Program Files\PostgreSQL\17"
          nmake /F Makefile.win
          nmake /F Makefile.win install

      - name: Create artifact (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          REM Create directory structure
          mkdir pgvector-${{ matrix.triple }}-pg17\lib
          mkdir pgvector-${{ matrix.triple }}-pg17\share\extension
          mkdir pgvector-${{ matrix.triple }}-pg17\include\server\extension\vector

          REM Copy shared library
          copy "C:\Program Files\PostgreSQL\17\lib\vector.dll" pgvector-${{ matrix.triple }}-pg17\lib\

          REM Copy extension files
          copy "C:\Program Files\PostgreSQL\17\share\extension\vector*.sql" pgvector-${{ matrix.triple }}-pg17\share\extension\
          copy "C:\Program Files\PostgreSQL\17\share\extension\vector.control" pgvector-${{ matrix.triple }}-pg17\share\extension\

          REM Copy header files
          copy "C:\Program Files\PostgreSQL\17\include\server\extension\vector\halfvec.h" pgvector-${{ matrix.triple }}-pg17\include\server\extension\vector\
          copy "C:\Program Files\PostgreSQL\17\include\server\extension\vector\sparsevec.h" pgvector-${{ matrix.triple }}-pg17\include\server\extension\vector\
          copy "C:\Program Files\PostgreSQL\17\include\server\extension\vector\vector.h" pgvector-${{ matrix.triple }}-pg17\include\server\extension\vector\

          REM Create zip archive
          7z a -tzip pgvector-${{ matrix.triple }}-pg17.zip pgvector-${{ matrix.triple }}-pg17

          REM Create tar.gz archive
          7z a -ttar pgvector-${{ matrix.triple }}-pg17.tar pgvector-${{ matrix.triple }}-pg17
          7z a -tgzip pgvector-${{ matrix.triple }}-pg17.tar.gz pgvector-${{ matrix.triple }}-pg17.tar
          del pgvector-${{ matrix.triple }}-pg17.tar

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            pgvector-${{ matrix.triple }}-pg17.zip
            pgvector-${{ matrix.triple }}-pg17.tar.gz
          name: v0.17.${{ github.run_number }}
          tag_name: v0.17.${{ github.run_number }}
          body: |
            pgvector v${{ needs.check_version.outputs.version }} for PostgreSQL 17.4
